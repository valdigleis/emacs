#+title: V-Emacs
#+author: Valdigleis (Dk4LL)
#+email: dk4ll@proton.me
#+date: 25/07/2024

* Preparação do ambiente
1. Primeiramente, instale o Emacs no seu ambiente, no Debian isso pode ser feito usando o comando: =sudo apt install emacs-nox emacs-common=   
2. Agora execute os comandos =mkdir ~/.config/emacs= e  =touch ~/.config/emacs/init.el ~/.config/emacs/config.org= para criar os arquivos básicos
3. Cole para o arquivo =~/.config/init= o código:
#+begin_example
(org-babel-load-file
  (expand-file-name "config.org" user-emacs-directory))
#+end_example
4. Instale o zsh para tirar maior proveito desta configuração, a instalação pode ser feita usando o comando =sudo apt install zsh=
   
* Configurações Básicas
** Desabilitar tela de boas-vindas e ativas o scratch
#+begin_src emacs-lisp
(setq inhibit-startup-message t)
#+end_src

** Habilita o uso de espaços para a tabulação
#+begin_src emacs-lisp
(setq-default indent-tabs-mode nil)
#+end_src

** Habilita deletar texto selecionado ao digitar
#+begin_src emacs-lisp
(delete-selection-mode t)
#+end_src

** Desativar backups globalmente
#+begin_src emacs-lisp
(setq make-backup-files nil)
#+end_src

** Habilita o salvamento da posição do cursor ao sair
#+begin_src emacs-lisp
(save-place-mode 1)
#+end_src

** Habilita a funcionalidade de lembrar de arquivos recentes
#+begin_src emacs-lisp
(recentf-mode 1)
#+end_src

** Habilita o salvamento do historico de comandos
#+begin_src emacs-lisp
(savehist-mode 1)
#+end_src

** Habilita a atualização automática para os buffers dos arquivos modificados externamente
#+begin_src emacs-lisp
(setopt auto-revert-avoid-polling t)
#+end_src

** Define o intervalo em segundos que o Emacs irá verificar se houve atualização externa dos arquivos
#+begin_src emacs-lisp
(setopt auto-revert-interval 60)
#+end_src

** Habilita o Emacs para verificar informações de controle de versão automaticamente
#+begin_src emacs-lisp
(setopt auto-revert-check-vc-info t)
#+end_src

** Habilita a movimentação entre janelas usando da combinação C-teclas direcionais
#+begin_src emacs-lisp
(windmove-default-keybindings 'control)
#+end_src

** Desabilita a necessidade das sentenças terem que terminar com dois espaços
#+begin_src emacs-lisp
(setopt sentence-end-double-space nil)
#+end_src

** Desabilita o sinal sonoro
#+begin_src emacs-lisp
(setq ring-bell-function 'ignore)
#+end_src

** Desabilita o sinal visual e sonoro do Emacs (Apenas modo gráfico)
#+begin_src emacs-lisp
(when (display-graphic-p)
  (setq visible-bell t))
(when (display-graphic-p)
  (setq visible-bell t))
#+end_src

** Habilita o uso de y e n para confirmações ou negações no Emacs
#+begin_src emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
#+end_src

** Habilita o fechamento de pares
#+begin_src emacs-lisp
(electric-pair-mode 1)
#+end_src

** Habilita o uso do ESC para sair do minibuffer e desabilita o C-z
#+begin_src emacs-lisp
(global-set-key (kbd "<escape>") 'keyboard-escape-quit)
(global-unset-key (kbd "C-z"))
#+end_src

* Configuração básica da interface (UI)
** Habilita a exibição do número da coluna
#+begin_src emacs-lisp
(column-number-mode 1)
#+end_src

** Desabilita o menu bar
#+begin_src emacs-lisp
(menu-bar-mode -1)
#+end_src

** Desabilita a tool bar (no modo gráfico)
#+begin_src emacs-lisp
(when (display-graphic-p)
  (tool-bar-mode -1))
#+end_src

** Desabilita a barra de navegação (no modo gráfico)
#+begin_src emacs-lisp
(when (display-graphic-p)
  (scroll-bar-mode -1))
#+end_src

** Desabilita a tooltip (no modo gráfico)
#+begin_src emacs-lisp
(when (display-graphic-p)
  (tooltip-mode -1))
#+end_src

** Desabilita a visualização dos espaços em branco no final das linhas
#+begin_src emacs-lisp
(setopt show-trailing-whitespace nil)
#+end_src

** Melhora efeito visual do texto sublinhado
#+begin_src emacs-lisp
(setopt x-underline-at-descent-line nil)
#+end_src

** Habilita o destaque da linha atual do cursor
#+begin_src emacs-lisp
(global-hl-line-mode t)
#+end_src

** Define a cor usada para o destaque da linha
#+begin_src emacs-lisp
(set-face-background 'hl-line "#5e4a46")
(set-face-foreground 'highlight nil)
#+end_src

** Habilita a quebra visual de linha
#+begin_src emacs-lisp
(global-visual-line-mode t)
#+end_src

** Habilita os indicadores visuais na margem esquerda da janela de edição
#+begin_src emacs-lisp
(setopt indicate-buffer-boundaries 'left)
#+end_src

** Define a borda do Emacs em 10px (no modo gráfico)
#+begin_src emacs-lisp
(when (display-graphic-p)
  (set-fringe-mode 10))
#+end_src

** Configuração para exibição das linhas
#+begin_src emacs-lisp
(global-display-line-numbers-mode 1)
(setq display-line-numbers-type 'relative)
(dolist (mode '(org-mode-hook
                term-mode-hook
                shell-mode-hook
                eshell-mode-hook
                help-mode-hook))
        (add-hook mode (lambda () (display-line-numbers-mode 0))))
#+end_src

** Configuração das fontes usadas (é necessário instalar a FireMono Nerd Font no seus sitema)
#+begin_src emacs-lisp
(set-face-attribute 'default nil :font "FiraMono Nerd Font Mono 13")
(set-face-attribute 'variable-pitch nil :font "FiraMono Nerd Font Mono 13")
(set-face-attribute 'fixed-pitch nil :font "FiraMono Nerd Font Mono 13")
#+end_src

** Transparência da interface
#+begin_src emacs-lisp
(add-to-list 'default-frame-alist '(alpha-background . 100))
#+end_src

* Configuração do Orgmode
** Ativar o orgmode
    #+begin_src emacs-lisp
        (require 'org)
    #+end_src

** Adicionar extensão .org ao Org Mode
    #+begin_src emacs-lisp
        (add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
    #+end_src

** Habilitar a visualização do folding
    #+begin_src emacs-lisp
        (setq org-startup-folded t)
    #+end_src

** Habilitar folding para códigos dentro de blocos de código
    #+begin_src emacs-lisp
        (setq org-src-fontify-natively t)
        (setq org-src-tab-acts-natively t)
        (setq org-edit-src-content-indentation 0)
    #+end_src

* Configuração de Backups, custom e fontes
** Define o diretório padrão para backups
    #+begin_src emacs-lisp
        (setq backup-directory-alist '((".*" . "~/.local/share/Trash/files")))
    #+end_src

** Define o arquivo padrão para escrever as configurações
    #+begin_src emacs-lisp
        (setq custom-file (locate-user-emacs-file "custom.el"))
        (load custom-file 'noerror 'nomessage)
    #+end_src
    
* Configuração para gestão de pacotes
1. Inicialização (coneção) com os repostiórios de pacotes
 #+begin_src emacs-lisp
 (require 'package)
 (setq package-archives '(("melpa" . "https://melpa.org/packages/")
                          ("elpa" . "https://elpa.gnu.org/packages/")
                          ("gnu" . "https://elpa.gnu.org/packages/")))
 (package-initialize)
 (unless package-archive-contents
   (package-refresh-contents)) 
 #+end_src

2. Configuração do Helper de gerenciamento "use-package"
 #+begin_src emacs-lisp
   (unless (package-installed-p 'use-package)
      (package-install 'use-package))
   (require 'use-package)
   (setq use-package-always-ensure t)
 #+end_src
     
* Instalação dos Pacotes
** Evil Mode
O lado negro da força, uma emulação do Vim no Emacs.
#+begin_src emacs-lisp
;    (use-package evil
;      :init
;      (setq evil-want-integration t
;            evil-want-keybinding nil
;            evil-vsplit-window-right t
;            evil-split-window-below t
;            evil-undo-system 'undo-redo)
;      (evil-mode))
#+end_src

#+begin_src emacs-lisp
;    (use-package evil-collecton
;      :after evil
;      :config
;      (add-to-list 'evil-collection-mode-list 'help)
;      (evil-collection-init))
#+end_src

** Keycast
Adiciona no modeline a exibição das teclas acionadas.
#+begin_src emacs-lisp
  (use-package keycast
    :config
    (add-to-list 'global-mode-string '("" keycast-mode-line-mode ""))
    (keycast-mode-line-mode))
#+end_src

** Vertico
Incrementa o menu de buscas padrão do Emacs.
#+begin_src emacs-lisp
(use-package vertico
  :bind (:map vertico-map
              ("C-i" . vertico-previous)
              ("C-o" . vertico-next)
              ("C-e" . vertico-exit)
              :map minibuffer-local-map
              ("M-h" . backward-kill-word))
  :custom
  (vertico-cycle t)
  :init
  (vertico-mode))
#+end_src

** Marginalia
Adiciona descrição dos itens no meu de buscas padrão do Emacs.
#+begin_src emacs-lisp
(use-package marginalia
  :after vertico
  :custom
  (marginalia-annotators '(marginalia-annotators-heavy marginalia-annotators-light nil))
  :init
  (marginalia-mode))
#+end_src

** Orderless
Adiciona busca fuzzy não ordenada para a busca da busca padrão do Emcas.
#+begin_src emacs-lisp
(use-package orderless
  :config
  (setq completion-styles '(orderless basic)))
#+end_src

** Consult
Adiciona melhoras na experiência de uso na consulta e navegação dentro do Emacs.
#+begin_src emacs-lisp
(use-package consult)
#+end_src

** Which-key
Adiciona a camada de sugestão de comandos no Emacs.
#+begin_src emacs-lisp
(use-package which-key
  :init
  (which-key-mode 1)
  :diminish
  :config
  (setq which-key-side-window-location 'bottom
        which-key-sort-order #'which-key-key-order-alpha
        which-key-allow-imprecise-window-fit nil
        which-key-sort-uppercase-first nil
        which-key-add-column-padding 1
        which-key-max-display-columns nil
        which-key-min-display-lines 8
        which-key-side-window-slot -10
        which-key-side-window-max-height 0.25
        which-key-idle-delay 0.9
        which-key-allow-imprecise-widow-fit nil
        which-key-separator " » "))
#+end_src

** Instalação do gerenciador de tema de cores
Instala o doom-themes para gerenciar os temas de cores
#+begin_src emacs-lisp
(use-package doom-themes
  :config
  (setq doom-themes-enable-bold t
        doom-themes-enable-italic t)
  (load-theme 'doom-oceanic-next t)
  (doom-themes-org-config))
#+end_src

** Rainbow Mode
#+begin_src emacs-lisp
(use-package rainbow-mode
:diminish
:hook org-mode prog-mode)
#+end_src


